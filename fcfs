#include<stdio.h>
#include<stdlib.h>

#define n 4

int at[n];
int bt[n];
int ct[n];
int tat[n];
int wt[n];

int compare(const void *a, const void *b) {
    return at[*(int*)a] - at[*(int*)b];
}

void main() {
    float wtavg = 0.0, tatavg = 0.0;

    for(int i = 0; i < n; i++) {
        printf("Enter Arrival Time for Process %d: ", i+1);
        scanf("%d", &at[i]);

        printf("Enter Burst Time for Process %d: ", i+1);
        scanf("%d", &bt[i]);
    }

    int processes[n];
    for (int i = 0; i < n; i++) {
        processes[i] = i;
    }

    qsort(processes, n, sizeof(int), compare);

    ct[processes[0]] = at[processes[0]] + bt[processes[0]];
    for (int i = 1; i < n; i++) {
        int p = processes[i];
        if (ct[processes[i-1]] >= at[p]) {
            ct[p] = ct[processes[i-1]] + bt[p];
        } else {
            ct[p] = at[p] + bt[p];
        }
    }

    for (int i = 0; i < n; i++) {
        int p = processes[i];
        tat[p] = ct[p] - at[p];
        wt[p] = tat[p] - bt[p];

        tatavg += tat[p];
        wtavg += wt[p];
    }

    tatavg /= n;
    wtavg /= n;

    printf("\nProcess\tAT\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\t%d\n", i+1, at[i], bt[i], ct[i], tat[i], wt[i]);
    }

    printf("\nAverage Turnaround Time (TAT): %.2f\n", tatavg);
    printf("Average Waiting Time (WT): %.2f\n", wtavg);
}

v
